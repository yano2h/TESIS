<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd" 
       xmlns:context="http://www.springframework.org/schema/context">
   <!-- <security:global-method-security
        secured-annotations="enabled">
		
			AspectJ pointcut expression that locates our "post" method and
			applies security that way <protect-pointcut expression="execution(*
			bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
		
    </security:global-method-security>
       -->   
       
    <context:property-placeholder location="classpath:cl/uv/security/properties/Security.properties" />
    
    <security:http pattern="/faces/authProvider.*" security="none"/>
    <security:http pattern="/faces/processResponseProvider.*" security="none"/>
    
    <security:http auto-config="true" entry-point-ref="openAMAuthenticationEntryPoint" access-denied-page="/faces/view/accessDenied.xhtml" >
        <security:custom-filter position="PRE_AUTH_FILTER" ref="openAMFilter" />
        <security:intercept-url pattern="/faces/view/accessDenied.*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/faces/view/jpa/**" access="ROLE_ADMIN"  />
        <security:intercept-url pattern="/faces/view/atencion/**" access="ROLE_ADMIN, ROLE_JEFE_AREA, ROLE_JEFE_DEPTO, ROLE_FUNC_DISICO" />
        <security:intercept-url pattern="/faces/view/proyectos/**" access="ROLE_ADMIN, ROLE_JEFE_AREA, ROLE_JEFE_DEPTO, ROLE_FUNC_DISICO" />
        <security:intercept-url pattern="/faces/view/scm/**" access="ROLE_ADMIN, ROLE_JEFE_AREA, ROLE_JEFE_DEPTO, ROLE_FUNC_DISICO" />
        <security:intercept-url pattern="/faces/view/solicitudes/**" access="ROLE_ADMIN, ROLE_SOLICITANTE" />
        <security:intercept-url pattern="/faces/view/**" access="IS_AUTHENTICATED_FULLY" />
        
        <security:logout logout-success-url="${spring.login_page}" />
    </security:http>
   
    <!-- Definicion el authentication entry point -->
    <bean id="openAMAuthenticationEntryPoint" class="cl.uv.security.openam.OpenAMAuthenticationEntryPoint">
        <property name="openAMLogin"
                  value="${spring.login_page}" />

    </bean>
    
    <!-- Bean que mantiene informacion sobre la autenticacion por OpenID -->
    <bean id="openIdSession"
          class="cl.uv.security.openid.OpenIdSession">
    </bean>
    
    <!--  Definicion del filtro -->
    <bean id="openAMFilter"
          class="cl.uv.security.openam.OpenAMPreAuthenticatedProcessingFilter">
	<property name="cookieNameToken" value="${spring.name_cookie}" />
	<property name="authenticationManager" ref="authenticationManager" />
        <property name="openIdSession" ref="openIdSession"/>
    </bean>
    
    <bean id="preauthAuthProvider"
          class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">     
	  <property name="preAuthenticatedUserDetailsService" ref="openAMUserDetailsService" />
    </bean>
    
    <bean id="openAMUserDetailsService"
          class="cl.uv.security.openam.OpenAMUserDetailsService">
        <property name="openIdSession" ref="openIdSession"/>
    </bean>
    
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="preauthAuthProvider" /> 
    </security:authentication-manager>
</beans>
  
